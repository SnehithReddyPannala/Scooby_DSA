//brute
class Solution {
    public ArrayList<Integer> intersection(int arr1[], int arr2[]) {
        ArrayList<Integer> result=new ArrayList<>();
        // code here
        for(int i=0;i<arr1.length;i++){
            int current=arr1[i];
            if(i>0 && arr1[i]==arr1[i-1])continue;
            for(int j=0;j<arr2.length;j++){
                if(arr2[j]==current){
                    result.add(arr2[j]);
                    break;
                }
            }
        }
        return result;
    }
}
//optimal
class Solution {
    public ArrayList<Integer> intersection(int arr1[], int arr2[]) {
        ArrayList<Integer> result=new ArrayList<>();
        // code here
          int i=0;
          int j=0;
          int n=arr1.length;
          int m=arr2.length;
          while(i<n && j<m){
              if(arr1[i]<arr2[j]){
                  i++;
              }else if(arr2[j]<arr1[i]){
                  j++;
              }else{
                  if (result.isEmpty() || result.get(result.size() - 1) != arr1[i]) {
                    result.add(arr1[i]);
                }
                 int val = arr1[i];
                while (i < n && arr1[i] == val) i++;
                while (j < m && arr2[j] == val) j++;
              }
          }
          return result;
    }
}
//using hashset
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) {
         ArrayList<Integer> result=new ArrayList<>();
         Scanner sc=new Scanner(System.in);
         HashSet<Integer> set1=new HashSet<>();
         int n1=sc.nextInt();

         int[] arr1=new int[n1];
         for(int p=0;p<n1;p++){
            arr1[p]=sc.nextInt();
         }
         int n2=sc.nextInt();
          int[] arr2=new int[n2];
         for(int q=0;q<n2;q++){
            arr2[q]=sc.nextInt();
         }
                  HashSet<Integer> stored=new HashSet<>();

          for(int val : arr2){
            set1.add(val);
          }
       for(int val2 : arr1){
        if(set1.contains(val2) && !stored.contains(val2)){
            System.out.print(val2+" ");
            stored.add(val2);
        }
       }
     
    }
}