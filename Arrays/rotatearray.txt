class Solution {
    public void rotate(int[] arr, int k) {
        int n=arr.length;
        k=k%n;
        int[] temp= new int[n];
        for(int i=0;i<k;i++){
            temp[i]=arr[n-k+i];
        }
        for(int i=n-k-1;i>=0;i--){
            arr[i+k]=arr[i];
        }
        for(int i=0;i<k;i++){
            arr[i]=temp[i];
        }

    }
}

//without using extra space optimal
class Solution {
    public void rotate(int[] arr, int k) {
        int n = arr.length;
        k = k % n; // handle k > n

        // Step 1: Reverse whole array
        reverse(arr, 0, n - 1);

        // Step 2: Reverse first k elements
        reverse(arr, 0, k - 1);

        // Step 3: Reverse remaining elements
        reverse(arr, k, n - 1);
    }

    private void reverse(int[] arr, int start, int end) {
        while (start < end) {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
    }
}
