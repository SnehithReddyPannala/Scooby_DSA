//brute
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        int n=nums.length;
        int first=0;
        int second=0;
        int third=0;
        List<List<Integer>>result=new ArrayList<>();
        for(int i=0;i<n-2;i++){
            first=nums[i];
            for(int j=i+1;j<n-1;j++){
                second=nums[j];
                for(int k=j+1;k<n;k++){
                    third=nums[k];
                    if((first+second+third)==0){
                    List<Integer>list=new ArrayList<>();
                    list.add(first);
                    list.add(second);
                    list.add(third);
                    Collections.sort(list);
                    if(!result.contains(list)){
                    result.add(list);
                    }
                    }
                }
            }
        }
        return result;
    }
}
//better
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        int n=nums.length;
        List<List<Integer>>result=new ArrayList<>();
        for(int i=0;i<n;i++){
            int target=-nums[i];
            HashMap<Integer,Integer>map=new HashMap<>();
            for(int j=i+1;j<n;j++){
                int complement=target-nums[j];
                if(map.containsKey(complement)){
                    List<Integer>list= Arrays.asList(nums[i],nums[j],complement);
                    Collections.sort(list);
                    if(!result.contains(list)){
                        result.add(list);
                    }
                }else{
                    map.put(nums[j],j);
                }
            }
        }
        return result;
    }
}
//optimal
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
          int n=nums.length;
          Arrays.sort(nums);
        List<List<Integer>>result=new ArrayList<>();
        for(int i=0;i<n-2;i++){
            if(i>0 && nums[i]==nums[i-1])continue;
            int left=i+1;
            int right=n-1;
            while(left<right){
                int sum=nums[i]+nums[left]+nums[right];
                if(sum==0){
                 result.add(Arrays.asList(nums[i], nums[left], nums[right]));
                 while(left<right && nums[left]==nums[left+1])left++;
                 while(left<right && nums[right]==nums[right-1])right--;

                 left++;
                 right--;
                }else if(sum<0){
                    left++;
                }else{
                    right--;
                }
            }
        }
        return result;
    }
}