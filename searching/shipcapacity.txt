class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int n=weights.length;
        int sumAll=0;
        int max=0;
        for(int w:weights){
            sumAll+=w;
            max=Math.max(w,max);
        }
        int low=max;
        int high=sumAll;
        int ans=0;
        while(low<=high){
            int mid=(low+high)/2;
            if(canShip(weights,days,mid)){
                ans=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
    private static boolean canShip(int[] arr,int d,int cap){
        int days=1;
        int load=0;
        for(int w:arr){
            if(load+w>cap){
                days++;
                load=0;
            }
            load+=w;
        }
        return days<=d;
    }
}